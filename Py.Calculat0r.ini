import math
import sympy as sp

# Глобальная переменная для хранения значения в памяти
память = None

def get_valid_expression(prompt):
    while True:
        try:
            # Ввод выражения
            выражение = input(prompt)
            # Замена запятых на точки для корректного преобразования чисел
            выражение = выражение.replace(',', '.')
            # Обработка бесконечности
            if выражение.lower() == "inf":
                return math.inf
            elif выражение.lower() == "-inf":
                return -math.inf
            # Вычисление выражения с использованием sympy
            результат = sp.sympify(выражение).evalf()
            return float(результат)
        except (ValueError, sp.SympifyError):
            print("[Ошибка: введите корректное выражение!]")

def calculator():
    global память

    while True:
        print("[Простой калькулятор]")
        print("[1] Сложение")
        print("[2] Вычитание")
        print("[3] Умножение")
        print("[4] Деление")
        print("[5] Проценты")
        print("[6] Использовать число π (пи)")
        print("[7] Очистить строку")
        print("[8] Синус (sin)")
        print("[9] Косинус (cos)")
        print("[10] Тангенс (tg)")
        print("[11] Котангенс (ctg)")
        print("[12] Логарифм (log)")
        print("[13] Квадратный корень (√)")
        print("[14] Кубический корень (∛)")
        print("[15] Возведение в степень (x^y)")
        print("[16] Факториал (n!)")
        print("[17] Записать в память")
        print("[18] Использовать значение из памяти")
        print("[19] Очистить память")
        print("[20] Гиперболический синус (sinh)")
        print("[21] Гиперболический косинус (cosh)")
        print("[22] Гиперболический тангенс (tanh)")
        print("[23] Гиперболический котангенс (coth)")
        print("[24] Модуль числа (abs)")
        print("[25] Экспонента (exp)")
        print("[26] Бесконечность (inf)")
        print("[27] Порядок величины (масштаб числа)")
        print("[28] Среднее арифметическое")
        print("[29] Неравенство (сравнение чисел)")
        print("[30] Приблизительное равенство")
        print("[31] Пропорциональность")
        print("[32] Производная")
        print("[33] Интеграл")
        print("[34] Конъюнкция (И)")
        print("[35] Дизъюнкция (ИЛИ)")
        print("[36] Импликация (→)")
        print("[37] Равносильность (↔)")
        print("[38] Выход")

        выбор = input("Выберите операцию (1-38): ")

        if выбор == '38':
            print("[Выход из калькулятора]")
            break  # Выход из цикла

        if выбор == '7':
            print("[Строка очищена!]")
            continue  # Начинаем заново

        if выбор in ('1', '2', '3', '4', '5', '6', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37'):
            try:
                if выбор == '5':
                    число = get_valid_expression("[Введите число]: ")
                    процент = get_valid_expression("[Введите процент]: ")
                    результат = (число * процент) / 100
                    print(f"[{процент}% от {число} = {результат}]")
                elif выбор == '6':
                    print(f"[Число π (пи) = {math.pi}]")
                    num1 = get_valid_expression("[Введите число для операции с π]: ")
                    while True:
                        операция = input("Выберите операцию с π (+, -, *, /): ")
                        if операция in ('+', '-', '*', '/'):
                            break
                        print("[Ошибка: неверная операция! Попробуйте снова.]")

                    if операция == '+':
                        print(f"[Результат: {num1 + math.pi}]")
                    elif операция == '-':
                        print(f"[Результат: {num1 - math.pi}]")
                    elif операция == '*':
                        print(f"[Результат: {num1 * math.pi}]")
                    elif операция == '/':
                        print(f"[Результат: {num1 / math.pi}]")
                elif выбор == '8':
                    угол = get_valid_expression("[Введите угол в градусах]: ")
                    радианы = math.radians(угол)
                    print(f"[Синус {угол}° = {math.sin(радианы)}]")
                elif выбор == '9':
                    угол = get_valid_expression("[Введите угол в градусах]: ")
                    радианы = math.radians(угол)
                    print(f"[Косинус {угол}° = {math.cos(радианы)}]")
                elif выбор == '10':
                    угол = get_valid_expression("[Введите угол в градусах]: ")
                    радианы = math.radians(угол)
                    тангенс = math.tan(радианы)
                    if abs(тангенс) > 1e10:  # Проверка на бесконечность
                        print(f"[Тангенс {угол}° не определён (угол близок к 90° или 270°)]")
                    else:
                        print(f"[Тангенс {угол}° = {тангенс}]")
                elif выбор == '11':
                    угол = get_valid_expression("[Введите угол в градусах]: ")
                    радианы = math.radians(угол)
                    тангенс = math.tan(радианы)
                    if abs(тангенс) < 1e-10:  # Проверка на бесконечность
                        print(f"[Котангенс {угол}° не определён (угол близок к 0° или 180°)]")
                    else:
                        котангенс = 1 / тангенс
                        print(f"[Котангенс {угол}° = {котангенс}]")
                elif выбор == '12':
                    число = get_valid_expression("[Введите число для логарифма]: ")
                    основание = get_valid_expression("[Введите основание логарифма]: ")
                    if число > 0 and основание > 0 and основание != 1:
                        результат = math.log(число, основание)
                        print(f"[Логарифм числа {число} по основанию {основание} = {результат}]")
                    else:
                        print("[Ошибка: число и основание должны быть положительными, а основание не равно 1!]")
                elif выбор == '13':
                    число = get_valid_expression("[Введите число для квадратного корня]: ")
                    if число >= 0:
                        результат = math.sqrt(число)
                        print(f"[Квадратный корень из {число} = {результат}]")
                    else:
                        print("[Ошибка: число должно быть неотрицательным!]")
                elif выбор == '14':
                    число = get_valid_expression("[Введите число для кубического корня]: ")
                    результат = число ** (1/3)
                    print(f"[Кубический корень из {число} = {результат}]")
                elif выбор == '15':
                    основание = get_valid_expression("[Введите основание степени]: ")
                    степень = get_valid_expression("[Введите степень]: ")
                    результат = основание ** степень
                    print(f"[{основание} в степени {степень} = {результат}]")
                elif выбор == '16':
                    число = get_valid_expression("[Введите число для вычисления факториала]: ")
                    if число >= 0 and число == int(число):  # Проверка на целое число
                        результат = math.factorial(int(число))
                        print(f"[Факториал {int(число)}! = {результат}]")
                    else:
                        print("[Ошибка: число должно быть неотрицательным целым!]")
                elif выбор == '17':
                    число = get_valid_expression("[Введите число для записи в память]: ")
                    память = число
                    print(f"[Число {число} записано в память.]")
                elif выбор == '18':
                    if память is not None:
                        print(f"[Использовано значение из памяти: {память}]")
                        num1 = память
                        num2 = get_valid_expression("[Введите второе число]: ")

                        операция = input("Выберите операцию (+, -, *, /): ")
                        if операция == '+':
                            print(f"[Результат: {num1 + num2}]")
                        elif операция == '-':
                            print(f"[Результат: {num1 - num2}]")
                        elif операция == '*':
                            print(f"[Результат: {num1 * num2}]")
                        elif операция == '/':
                            if num2 != 0:
                                print(f"[Результат: {num1 / num2}]")
                            else:
                                print("[Ошибка: деление на ноль невозможно!]")
                        else:
                            print("[Ошибка: неверная операция!]")
                    else:
                        print("[Ошибка: память пуста!]")
                elif выбор == '19':
                    память = None
                    print("[Память очищена.]")
                elif выбор == '20':
                    число = get_valid_expression("[Введите число для вычисления гиперболического синуса]: ")
                    результат = math.sinh(число)
                    print(f"[Гиперболический синус {число} = {результат}]")
                elif выбор == '21':
                    число = get_valid_expression("[Введите число для вычисления гиперболического косинуса]: ")
                    результат = math.cosh(число)
                    print(f"[Гиперболический косинус {число} = {результат}]")
                elif выбор == '22':
                    число = get_valid_expression("[Введите число для вычисления гиперболического тангенса]: ")
                    результат = math.tanh(число)
                    print(f"[Гиперболический тангенс {число} = {результат}]")
                elif выбор == '23':
                    число = get_valid_expression("[Введите число для вычисления гиперболического котангенса]: ")
                    if число != 0:
                        результат = 1 / math.tanh(число)
                        print(f"[Гиперболический котангенс {число} = {результат}]")
                    else:
                        print("[Ошибка: гиперболический котангенс не определён для нуля!]")
                elif выбор == '24':
                    число = get_valid_expression("[Введите число для вычисления модуля]: ")
                    результат = abs(число)
                    print(f"[Модуль числа {число} = {результат}]")
                elif выбор == '25':
                    число = get_valid_expression("[Введите число для вычисления экспоненты]: ")
                    результат = math.exp(число)
                    print(f"[Экспонента числа {число} = {результат}]")
                elif выбор == '26':
                    print(f"[Бесконечность (∞) = {math.inf}]")
                    print(f"[Отрицательная бесконечность (-∞) = {-math.inf}]")
                elif выбор == '27':
                    число = get_valid_expression("[Введите число для вычисления порядка величины]: ")
                    if число != 0:
                        порядок = math.floor(math.log10(abs(число)))
                        print(f"[Порядок величины числа {число} = 10^{порядок}]")
                    else:
                        print("[Ошибка: порядок величины не определён для нуля!]")
                elif выбор == '28':
                    числа = []
                    while True:
                        число = get_valid_expression("[Введите число (или 'готово' для завершения)]: ")
                        if isinstance(число, str) and число.lower() == "готово":
                            break
                        числа.append(число)
                    if len(числа) > 0:
                        среднее = sum(числа) / len(числа)
                        print(f"[Среднее арифметическое введённых чисел = {среднее}]")
                    else:
                        print("[Ошибка: не введено ни одного числа!]")
                elif выбор == '29':
                    num1 = get_valid_expression("[Введите первое число]: ")
                    num2 = get_valid_expression("[Введите второе число]: ")
                    if num1 > num2:
                        print(f"[{num1} > {num2}]")
                    elif num1 < num2:
                        print(f"[{num1} < {num2}]")
                    else:
                        print(f"[{num1} = {num2}]")
                elif выбор == '30':
                    num1 = get_valid_expression("[Введите первое число]: ")
                    num2 = get_valid_expression("[Введите второе число]: ")
                    погрешность = get_valid_expression("[Введите допустимую погрешность]: ")
                    if abs(num1 - num2) < погрешность:
                        print(f"[Числа {num1} и {num2} приблизительно равны с погрешностью {погрешность}]")
                    else:
                        print(f"[Числа {num1} и {num2} не равны с погрешностью {погрешность}]")
                elif выбор == '31':
                    num1 = get_valid_expression("[Введите первое число]: ")
                    num2 = get_valid_expression("[Введите второе число]: ")
                    num3 = get_valid_expression("[Введите третье число]: ")
                    num4 = get_valid_expression("[Введите четвертое число]: ")
                    if num1 * num4 == num2 * num3:
                        print(f"[Числа {num1}/{num2} и {num3}/{num4} пропорциональны]")
                    else:
                        print(f"[Числа {num1}/{num2} и {num3}/{num4} не пропорциональны]")
                elif выбор == '32':
                    выражение = input("[Введите функцию для вычисления производной (например, 'x**2 + 2*x'): ")
                    переменная = input("[Введите переменную дифференцирования (например, 'x'): ")
                    try:
                        x = sp.symbols(переменная)
                        функция = sp.sympify(выражение)
                        производная = sp.diff(функция, x)
                        print(f"[Производная функции {выражение} по {переменной} = {производная}]")
                    except (sp.SympifyError, ValueError):
                        print("[Ошибка: введите корректное выражение или переменную!]")
                elif выбор == '33':
                    выражение = input("[Введите функцию для вычисления интеграла (например, 'x**2 + 2*x'): ")
                    переменная = input("[Введите переменную интегрирования (например, 'x'): ")
                    try:
                        x = sp.symbols(переменная)
                        функция = sp.sympify(выражение)
                        интеграл = sp.integrate(функция, x)
                        print(f"[Неопределённый интеграл функции {выражение} по {переменной} = {интеграл}]")
                        нижний_предел = input("[Введите нижний предел интегрирования (или оставьте пустым для неопределённого интеграла): ")
                        верхний_предел = input("[Введите верхний предел интегрирования (или оставьте пустым для неопределённого интеграла): ")
                        if нижний_предел and верхний_предел:
                            нижний_предел = sp.sympify(нижний_предел)
                            верхний_предел = sp.sympify(верхний_предел)
                            определённый_интеграл = sp.integrate(функция, (x, нижний_предел, верхний_предел))
                            print(f"[Определённый интеграл функции {выражение} от {нижний_предел} до {верхний_предел} = {определённый_интеграл}]")
                    except (sp.SympifyError, ValueError):
                        print("[Ошибка: введите корректное выражение или пределы интегрирования!]")
                elif выбор == '34':
                    выражение1 = input("[Введите первое логическое выражение (например, 'x & y'): ")
                    выражение2 = input("[Введите второе логическое выражение (например, 'x | y'): ")
                    try:
                        x, y = sp.symbols('x y')
                        expr1 = sp.sympify(выражение1)
                        expr2 = sp.sympify(выражение2)
                        результат = expr1 & expr2
                        print(f"[Конъюнкция {выражение1} и {выражение2} = {результат}]")
                    except (sp.SympifyError, ValueError):
                        print("[Ошибка: введите корректные логические выражения!]")
                elif выбор == '35':
                    выражение1 = input("[Введите первое логическое выражение (например, 'x & y'): ")
                    выражение2 = input("[Введите второе логическое выражение (например, 'x | y'): ")
                    try:
                        x, y = sp.symbols('x y')
                        expr1 = sp.sympify(выражение1)
                        expr2 = sp.sympify(выражение2)
                        результат = expr1 | expr2
                        print(f"[Дизъюнкция {выражение1} и {выражение2} = {результат}]")
                    except (sp.SympifyError, ValueError):
                        print("[Ошибка: введите корректные логические выражения!]")
                elif выбор == '36':
                    выражение1 = input("[Введите первое логическое выражение (например, 'x'): ")
                    выражение2 = input("[Введите второе логическое выражение (например, 'y'): ")
                    try:
                        x, y = sp.symbols('x y')
                        expr1 = sp.sympify(выражение1)
                        expr2 = sp.sympify(выражение2)
                        результат = sp.Implies(expr1, expr2)
                        print(f"[Импликация {выражение1} → {выражение2} = {результат}]")
                    except (sp.SympifyError, ValueError):
                        print("[Ошибка: введите корректные логические выражения!]")
                elif выбор == '37':
                    выражение1 = input("[Введите первое логическое выражение (например, 'x'): ")
                    выражение2 = input("[Введите второе логическое выражение (например, 'y'): ")
                    try:
                        x, y = sp.symbols('x y')
                        expr1 = sp.sympify(выражение1)
                        expr2 = sp.sympify(выражение2)
                        результат = sp.Equivalent(expr1, expr2)
                        print(f"[Равносильность {выражение1} ↔ {выражение2} = {результат}]")
                    except (sp.SympifyError, ValueError):
                        print("[Ошибка: введите корректные логические выражения!]")
                else:
                    num1 = get_valid_expression("[Введите первое число]: ")
                    num2 = get_valid_expression("[Введите второе число]: ")

                    if выбор == '1':
                        print(f"[Результат: {num1 + num2}]")
                    elif выбор == '2':
                        print(f"[Результат: {num1 - num2}]")
                    elif выбор == '3':
                        print(f"[Результат: {num1 * num2}]")
                    elif выбор == '4':
                        if num2 != 0:
                            print(f"[Результат: {num1 / num2}]")
                        else:
                            print("[Ошибка: деление на ноль невозможно!]")
            except KeyboardInterrupt:
                print("\n[Выход из калькулятора]")
                break
            except OverflowError:
                print("[Ошибка: число слишком большое!]")
        else:
            print("[Ошибка: введите число от 1 до 38 для выбора операции!]")

        print("\n")

if __name__ == "__main__":
    calculator()
