import math
import sympy as sp

# Глобальная переменная для хранения значения в памяти
память = None

def get_valid_expression(prompt):
    while True:
        try:
            # Ввод выражения
            выражение = input(prompt)
            # Замена запятых на точки для корректного преобразования чисел
            выражение = выражение.replace(',', '.')
            # Вычисление выражения с использованием sympy
            результат = sp.sympify(выражение).evalf()
            return float(результат)
        except (ValueError, sp.SympifyError):
            print("[Ошибка: введите корректное выражение!]")

def calculator():
    global память

    while True:
        print("[Простой калькулятор]")
        print("[1] Сложение")
        print("[2] Вычитание")
        print("[3] Умножение")
        print("[4] Деление")
        print("[5] Проценты")
        print("[6] Использовать число π (пи)")
        print("[7] Очистить строку")
        print("[8] Синус (sin)")
        print("[9] Косинус (cos)")
        print("[10] Тангенс (tg)")
        print("[11] Котангенс (ctg)")
        print("[12] Логарифм (log)")
        print("[13] Квадратный корень (√)")
        print("[14] Кубический корень (∛)")
        print("[15] Возведение в степень (x^y)")
        print("[16] Факториал (n!)")
        print("[17] Записать в память")
        print("[18] Использовать значение из памяти")
        print("[19] Очистить память")
        print("[20] Гиперболический синус (sinh)")
        print("[21] Гиперболический косинус (cosh)")
        print("[22] Гиперболический тангенс (tanh)")
        print("[23] Гиперболический котангенс (coth)")
        print("[24] Выход")

        выбор = input("Выберите операцию (1-24): ")

        if выбор == '24':
            print("[Выход из калькулятора]")
            break  # Выход из цикла

        if выбор == '7':
            print("[Строка очищена!]")
            continue  # Начинаем заново

        if выбор in ('1', '2', '3', '4', '5', '6', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23'):
            try:
                if выбор == '5':
                    число = get_valid_expression("[Введите число]: ")
                    процент = get_valid_expression("[Введите процент]: ")
                    результат = (число * процент) / 100
                    print(f"[{процент}% от {число} = {результат}]")
                elif выбор == '6':
                    print(f"[Число π (пи) = {math.pi}]")
                    num1 = get_valid_expression("[Введите число для операции с π]: ")
                    while True:
                        операция = input("Выберите операцию с π (+, -, *, /): ")
                        if операция in ('+', '-', '*', '/'):
                            break
                        print("[Ошибка: неверная операция! Попробуйте снова.]")

                    if операция == '+':
                        print(f"[Результат: {num1 + math.pi}]")
                    elif операция == '-':
                        print(f"[Результат: {num1 - math.pi}]")
                    elif операция == '*':
                        print(f"[Результат: {num1 * math.pi}]")
                    elif операция == '/':
                        print(f"[Результат: {num1 / math.pi}]")
                elif выбор == '8':
                    угол = get_valid_expression("[Введите угол в градусах]: ")
                    радианы = math.radians(угол)
                    print(f"[Синус {угол}° = {math.sin(радианы)}]")
                elif выбор == '9':
                    угол = get_valid_expression("[Введите угол в градусах]: ")
                    радианы = math.radians(угол)
                    print(f"[Косинус {угол}° = {math.cos(радианы)}]")
                elif выбор == '10':
                    угол = get_valid_expression("[Введите угол в градусах]: ")
                    радианы = math.radians(угол)
                    тангенс = math.tan(радианы)
                    if abs(тангенс) > 1e10:  # Проверка на бесконечность
                        print(f"[Тангенс {угол}° не определён (угол близок к 90° или 270°)]")
                    else:
                        print(f"[Тангенс {угол}° = {тангенс}]")
                elif выбор == '11':
                    угол = get_valid_expression("[Введите угол в градусах]: ")
                    радианы = math.radians(угол)
                    тангенс = math.tan(радианы)
                    if abs(тангенс) < 1e-10:  # Проверка на бесконечность
                        print(f"[Котангенс {угол}° не определён (угол близок к 0° или 180°)]")
                    else:
                        котангенс = 1 / тангенс
                        print(f"[Котангенс {угол}° = {котангенс}]")
                elif выбор == '12':
                    число = get_valid_expression("[Введите число для логарифма]: ")
                    основание = get_valid_expression("[Введите основание логарифма]: ")
                    if число > 0 and основание > 0 and основание != 1:
                        результат = math.log(число, основание)
                        print(f"[Логарифм числа {число} по основанию {основание} = {результат}]")
                    else:
                        print("[Ошибка: число и основание должны быть положительными, а основание не равно 1!]")
                elif выбор == '13':
                    число = get_valid_expression("[Введите число для квадратного корня]: ")
                    if число >= 0:
                        результат = math.sqrt(число)
                        print(f"[Квадратный корень из {число} = {результат}]")
                    else:
                        print("[Ошибка: число должно быть неотрицательным!]")
                elif выбор == '14':
                    число = get_valid_expression("[Введите число для кубического корня]: ")
                    результат = число ** (1/3)
                    print(f"[Кубический корень из {число} = {результат}]")
                elif выбор == '15':
                    основание = get_valid_expression("[Введите основание степени]: ")
                    степень = get_valid_expression("[Введите степень]: ")
                    результат = основание ** степень
                    print(f"[{основание} в степени {степень} = {результат}]")
                elif выбор == '16':
                    число = get_valid_expression("[Введите число для вычисления факториала]: ")
                    if число >= 0 and число == int(число):  # Проверка на целое число
                        результат = math.factorial(int(число))
                        print(f"[Факториал {int(число)}! = {результат}]")
                    else:
                        print("[Ошибка: число должно быть неотрицательным целым!]")
                elif выбор == '17':
                    число = get_valid_expression("[Введите число для записи в память]: ")
                    память = число
                    print(f"[Число {число} записано в память.]")
                elif выбор == '18':
                    if память is not None:
                        print(f"[Использовано значение из памяти: {память}]")
                        num1 = память
                        num2 = get_valid_expression("[Введите второе число]: ")

                        операция = input("Выберите операцию (+, -, *, /): ")
                        if операция == '+':
                            print(f"[Результат: {num1 + num2}]")
                        elif операция == '-':
                            print(f"[Результат: {num1 - num2}]")
                        elif операция == '*':
                            print(f"[Результат: {num1 * num2}]")
                        elif операция == '/':
                            if num2 != 0:
                                print(f"[Результат: {num1 / num2}]")
                            else:
                                print("[Ошибка: деление на ноль невозможно!]")
                        else:
                            print("[Ошибка: неверная операция!]")
                    else:
                        print("[Ошибка: память пуста!]")
                elif выбор == '19':
                    память = None
                    print("[Память очищена.]")
                elif выбор == '20':
                    число = get_valid_expression("[Введите число для вычисления гиперболического синуса]: ")
                    результат = math.sinh(число)
                    print(f"[Гиперболический синус {число} = {результат}]")
                elif выбор == '21':
                    число = get_valid_expression("[Введите число для вычисления гиперболического косинуса]: ")
                    результат = math.cosh(число)
                    print(f"[Гиперболический косинус {число} = {результат}]")
                elif выбор == '22':
                    число = get_valid_expression("[Введите число для вычисления гиперболического тангенса]: ")
                    результат = math.tanh(число)
                    print(f"[Гиперболический тангенс {число} = {результат}]")
                elif выбор == '23':
                    число = get_valid_expression("[Введите число для вычисления гиперболического котангенса]: ")
                    if число != 0:
                        результат = 1 / math.tanh(число)
                        print(f"[Гиперболический котангенс {число} = {результат}]")
                    else:
                        print("[Ошибка: гиперболический котангенс не определён для нуля!]")
                else:
                    num1 = get_valid_expression("[Введите первое число]: ")
                    num2 = get_valid_expression("[Введите второе число]: ")

                    if выбор == '1':
                        print(f"[Результат: {num1 + num2}]")
                    elif выбор == '2':
                        print(f"[Результат: {num1 - num2}]")
                    elif выбор == '3':
                        print(f"[Результат: {num1 * num2}]")
                    elif выбор == '4':
                        if num2 != 0:
                            print(f"[Результат: {num1 / num2}]")
                        else:
                            print("[Ошибка: деление на ноль невозможно!]")
            except KeyboardInterrupt:
                print("\n[Выход из калькулятора]")
                break
            except OverflowError:
                print("[Ошибка: число слишком большое!]")
        else:
            print("[Ошибка: введите число от 1 до 24 для выбора операции!]")

        print("\n")

if __name__ == "__main__":
    calculator()
